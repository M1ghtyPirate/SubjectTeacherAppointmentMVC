@{
    ViewData["Title"] = "Преподаватели";
    Func<Teacher, bool> isUserAuthorized = (f) => Context.User.FindFirstValue(ClaimTypes.Role) == "Admin";
}
@model IEnumerable<Teacher>

<div class="page-content-center page-content-display">
    <h1>@ViewData["Title"]</h1>
    <table class="table">
        <tr>
            <th>ФИО</th>
            <th>Дата добавления</th>
            <th>Редактирование</th>
        </tr>
        @foreach (var item in Model)
        {
            <tr>
                <td><a asp-action="Teacher" asp-route-id=@item.TeacherID>@(Formatting.getTeacherDisplayString(item))</a></td>
                <td>@item.CreationDate</td>
                <td>
                    <a asp-action="EditTeacher" asp-route-id=@item.TeacherID><input disabled="@(!isUserAuthorized(item))" type="button" value="Изменить" /></a>
                    <br />
                    <a asp-action="RemoveTeacher" onclick="ActionConfirmation('Удалить преподавателя: @item.LastName?')" asp-route-id=@item.TeacherID><input disabled="@(!isUserAuthorized(item))" type="button" class="input-delete" value="Удалить" /></a>
                </td>
            </tr>
        }
    </table>
    <div>
        <a asp-action="AddTeacher"><input type="button" disabled="@(!isUserAuthorized(null))" value="Добавить нового преподавателя" /></a>
    </div>
</div>